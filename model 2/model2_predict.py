import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.metrics import confusion_matrix

print("Model 2 prediction started")

data_train = pd.read_csv('model2.csv')  # read file generated by preprocess

missing_vals= data_train.isnull().sum().sort_values(ascending=False)
print(missing_vals)
print(data_train.shape[0])

print(data_train['failure'].value_counts())

Y = data_train['failure']                  # remove cols
serial=data_train['serial_number']
data_train.drop('failure', axis=1, inplace=True)
data_train.drop('serial_number', axis=1, inplace=True)

from imblearn.over_sampling import SMOTE   # Apply SMOTE
smt = SMOTE()
data_train, Y = smt.fit_sample(data_train, Y)
                                        #Apply test train split into partition test and train data
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(data_train,Y,test_size=0.5,random_state=3)  

from sklearn import tree        #use decision tree classifier 
clf = tree.DecisionTreeClassifier()
clf.fit(x_train,y_train)

y_pred=clf.predict(x_test)    #predicted values
from sklearn.metrics import confusion_matrix,accuracy_score
print(confusion_matrix(y_test,y_pred))
print(accuracy_score(y_test,y_pred))    #get Accuracy